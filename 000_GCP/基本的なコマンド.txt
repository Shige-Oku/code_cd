最新の gcloud コマンドを取得
gcloud components update

必要なパッケージのインストール
pip install -r requirements.txt -t lib

gcloud datalab コンポーネントをインストールします。
gcloud components install datalab

プロジェクトＩＤの確認
gcloud config list project --format "value(core.project)"

プロジェクトＩＤのリスト
gcloud config list project

デフォルトのゾーンを設定
gcloud config set compute/zone ...

デフォルトのリージョンを設定
gcloud config set compute/region ...


gcloud config list

他のプロパティの設定内容を確認する
gcloud config list --all



仮想マシンに接続
gcloud compute --project crested-polygon-231213 ssh --zone us-east1-b instance-2

インスタンスの起動・停止
gcloud compute instances start <your-instance-name> --zone <zone>
gcloud compute instances stop <your-instance-name> --zone <zone>

使用可能な仮想マシンのリストを表示
gcloud compute instances list

使用可能な仮想マシンイメージのリストを表示
gcloud compute images list

使用可能なマシンタイプのリストを表示
gcloud compute machine-types list

仮想マシン作成（デフォルトで）
gcloud compute instances create <instrace-5> --project <crested-polygon-231213>

仮想マシン作成（マシンタイプ指定で）
gcloud compute instances create gcelab2 --machine-type n1-standard-2 --zone us-central1-c

仮想マシン作成（イメージ指定で）
gcloud compute instances create <your-instance-name> --project <your-project-name> --image-family centos-7

起動スクリプトを使用するインスタンス テンプレートを作成します。
gcloud compute instance-templates create nginx-template --metadata-from-file startup-script=startup.sh

ターゲット プールを作成します。
gcloud compute target-pools create nginx-pool

ターゲットプールの確認
gcloud compute target-pools  list

インスタンス テンプレートを使用してマネージド インスタンス グループを作成します。
gcloud compute instance-groups managed create nginx-group \
         --base-instance-name nginx \
         --size 2 \
         --template nginx-template \
         --target-pool nginx-pool \

ファイアウォールを構成し、EXTERNAL_IP アドレス経由でマシンのポート 80 に接続できるようにします。
gcloud compute firewall-rules create www-firewall --allow tcp:80

インスタンス グループを対象とした L3 ネットワーク ロードバランサを作成
gcloud compute forwarding-rules create nginx-lb \
         --region us-central1 \
         --ports=80 \
         --target-pool nginx-pool

プロジェクトに含まれるすべての Google Compute Engine 転送ルールのリストを表示します。
gcloud compute forwarding-rules list

ヘルスチェックを作成します。ヘルスチェックでは、インスタンスが HTTP または HTTPS トラフィックにレスポンスすることが確認されます。
gcloud compute http-health-checks create http-basic-check

ポート名をインスタンス グループの該当するポートにマッピングします。これで、名前を指定したポートに負荷分散サービスがトラフィックを転送できるようになります。
gcloud compute instance-groups managed \
       set-named-ports nginx-group \
       --named-ports http:80

バックエンド サービスにインスタンス グループを追加します。
gcloud compute backend-services create nginx-backend \
      --protocol HTTP --http-health-checks http-basic-check --global

あらゆるインスタンスへの受信リクエストをすべて振り向けるデフォルトの URL マップを作成します。
gcloud compute url-maps create web-map \
    --default-service nginx-backend

自身の URL マップにリクエストを振り向けるターゲット HTTP プロキシを作成します。
gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-map

受信リクエストを処理し、振り向ける、グローバルの転送ルールを作成します。転送ルールにより、IP アドレス、IP プロトコル、ポートの指定に応じて、特定のターゲット HTTP プロキシまたは HTTPS プロキシにトラフィックが送信されるようになります。なお、グローバル転送ルールでは複数のポートはサポートされていません。
gcloud compute forwarding-rules create http-content-rule \
        --global \
        --target-http-proxy http-lb-proxy \
        --ports 80

グローバル転送ルールの作成したリストの表示
gcloud compute forwarding-rules list




クラスタの作成
gcloud container clusters create [CLUSTER-NAME]

クラスタの認証情報を取得します。
gcloud container clusters get-credentials [CLUSTER-NAME]

ターゲット プールを作成します。
gcloud compute target-pools create nginx-pool



バケットの一覧を出力するコマンド
gsutil ls

バケット内のオブジェクト一覧を出力するコマンド
gsutil ls <バケット>

バケットを作成
gsutil mb -l us-central1 gs://crested-polygon-231213-ml/

Cloud Storage バケットを作成してみましょう。バケット名は一意である必要があるため、unique-name を別の名前で置き換えるか、何か文字列を付け加えて名前が重複しないようにしてください。
gsutil mb gs://unique-name

作成したバケットにデータをアップロードします
gsutil cp test.dat gs://unique-name


GAE作成=>リージョン選択
gcloud app create

アプリケーションのデプロイ
gcloud app deploy


ml-engineにジョブをサブミット
gcloud ml-engine jobs submit training $JOBNAME


ユーザ権限の一覧表示
gcloud auth list
 